#!/bin/sh

# This program is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What The Fuck You Want
# To Public License, Version 2, as published by Sam Hocevar. See
# http://sam.zoy.org/wtfpl/COPYING for more details.

. ./paths

ulimit -t 10
ulimit -f 50000
ulimit -d 10000
ulimit -m 1024
ulimit -v 80960
ulimit -u 50
ulimit -x 50

user="$1"
shift


uid=$(chroot --userspec=0 "$WORKER" /bin/sh -c "id -u $user 2>/dev/null")

if [ -z "$uid" ]; then
#	echo "Long message for first command about adding new user..."
	echo "Adding new user ${user}...Done. Welcome to POSIX sh SH-bot! USAGE info on: ftp://neverb.net/doc/shbot/shbot.txt . Please note, that it is your first command sent to this bot. Thus, your this command output was supressed and redirected to pastebin."
	chroot --userspec=0 "$WORKER" /bin/sh -c "useradd -m $user"
	uid=$(chroot --userspec=0 "$WORKER" /bin/sh -c "id -u $user 2>/dev/null")	
	chmod 700 "$WORKER/home/$user"
#	mkdir "$WORKER/home/$user/conf"
#	chown "${user}:${user}" "$WORKER/home/$user/conf"
#	chmod 700 "$WORKER/home/$user/conf"
fi


echo '#!/bin/sh' > "$CMDF"
echo "HOME=/home/$user" >> "$CMDF"
echo "LOGNAME=$user" >> "$CMDF"
echo "MAIL=$user/.mail" >> "$CMDF"
echo "SUDO_COMMAND='hacker'" >> "$CMDF"
echo "USER=$user" >> "$CMDF"
echo "USERNAME=$user" >> "$CMDF"

echo 'ulimit -t 10' >> "$CMDF"
#echo 'ulimit -f 9000' >> "$CMDF"
echo 'ulimit -d 9000' >> "$CMDF"
echo 'ulimit -m 1024' >> "$CMDF"
echo 'ulimit -v 80960' >> "$CMDF"
echo 'ulimit -u 50' >> "$CMDF"
echo 'ulimit -x 50' >> "$CMDF"
echo "cd /home/$user" >> "$CMDF"
echo "mkdir -p /home/$user/conf" >> "$CMDF"
echo "$@" >> "$CMDF"

timeout 4 chroot --userspec=$uid:$uid "$WORKER" /bin/sh -c "bash $CMDP 2>&1 | head -c 10240 | sed 's|^$CMDP: line [0-9]*: ||g'" 2>/dev/null || { echo "Terminated"; }
#timeout 1 chroot --userspec=$uid "$WORKER" /bin/sh -c "bash $CMDP 2>&1 | head -c 10240"

########################### home check
files="$(find "$WORKER/tmp" "$WORKER/home" -user $uid -printf "%s %p\n" | sort -rn)"
count=$(echo "$files" | wc -l)
size=$(echo "$files" | awk '{i+=$1}END{print i}')

if [ $count -gt 100 ]; then
	echo "Too many files. Cleaning up."
	echo "$files" | sed '1,50d' | sed 's/^[0-9]*[[:space:]]//g' | while read line; do
		if [ -f "$line" ]; then
			rm -f "$line"
		fi
	done
	find "$WORKER/tmp" "$WORKER/home" -user $uid -type d -empty -not -path "$WORKER/home/$user" -and -not -path "$WORKER/home/$user/conf" -delete
fi

if [ $size -gt $((5*1024*1024)) ]; then
	echo "Too many big files. Cleaning up."
	echo "$files" | awk -v size="$size" -v "limit=$((5*1024*1024))" '{diff+=$1; if ((size - diff) < limit) {print $0; exit}; print $0}' | sed 's/^[0-9]* //g' | while read line; do
		rm -f "$line"
	done
	find "$WORKER/tmp" "$WORKER/home" -user $uid -type d -empty -not -path "$WORKER/home/$user" -and -not -path "$WORKER/home/$user/conf" -delete
fi

